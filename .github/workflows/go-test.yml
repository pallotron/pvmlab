# This workflow runs tests for the Go project.
#
# It is triggered on push events to the main branch and on pull requests
# targeting the main branch.
#
# It uses the standard Go test runner to execute all tests in the project.

name: Go Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod" # Or use a .go-version file
          cache: true

      - name: Setup dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          # Add Docker's official GPG key:
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86 genisoimage socat docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Test
        run: |
          export RUN_INTEGRATION_TESTS=false
          make test
